version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@6.0

parameters:
  node-version:
    type: string
    default: 14.15.1-browsers
  alerts-slack-channel:
    type: string
    default: hmpps_tech_alerts_security

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@6.14.8'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Linter
          command: npm run lint

  unit_test:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: |
            npm run test -- --reporter mocha-junit-reporter
          environment:
            MOCHA_FILE: ./reports/unit/test-results.xml
      - store_test_results:
          path: reports/unit
      - store_artifacts:
          path: reports/unit/test-results.xml

  deploy:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    parameters:
      push-to-branch:
        description: >
          Specify the branch that will be pushed to. Azure Web Apps webhook monitors this branch
          and will deploy from it when it is triggered.
        default: "azure-stage"
        type: string
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - deploy:
          name: Build Derived Git Commit
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then

              BUILD_NUMBER=$CIRCLE_BUILD_NUM \
              GIT_REF=$CIRCLE_SHA1 \
              GIT_DATE=$(git log --format=%cd -n1 --date=iso $CIRCLE_SHA1) \
                npm run record-build-info

              git add --force --verbose build-info.json assets/stylesheets/application.css
              git config user.name "Circle CI"
              git config user.email "circle@circleci.com"
              git commit \
                -m "Deployment of build $CIRCLE_BUILD_NUM" \
                -m "$(git log --format=%B -n 1 $CIRCLE_SHA1)" \
                -m "From gitref $CIRCLE_SHA1"

            fi
      - deploy:
          name: Deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then

              git push --force origin "HEAD:<< parameters.push-to-branch >>"

              # Production is IP allow-listed, so can only check deploy success in stage environment:
              if [ "<< parameters.push-to-branch >>" == "azure-stage" ]; then
                GIT_REF=$CIRCLE_SHA1 \
                APP_BASE_URL=https://stage.offloc.service.justice.gov.uk/health \
                WAIT_DURATION=45000 \
                  npm run wait-for-deploy
              fi

            fi

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore: /azure-.*/
      - unit_test:
          requires:
            - build
      - deploy:
          name: deploy_stage
          push-to-branch: "azure-stage"
          requires:
            - unit_test
          filters:
            branches:
              only:
                - main
      - request-prod-approval:
          type: approval
          requires:
            - deploy_stage
      - deploy:
          name: deploy_prod
          push-to-branch: "azure-prod"
          requires:
            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "30 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
